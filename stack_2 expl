#include <stdlib.h>
#include <iostream>

int* stackMemory1()
{
    int a = 1;
    return &a; // Возвращение поинтера на переменную 'a'
}

int* stackMemory2()
{
    int b = 2;
    return &b; // Возвращение поинтера на переменную 'b'
}

int main()
{
    int* b = stackMemory1(); // Получение поинтера на область памяти которая была выделена в stackMemory1()
    int a1 = *b; // Разыменование поинтера значение равно 1

    int* c = stackMemory2(); // Получение поинтера на область памяти которая была выделена в stackMemory2()
    int a2 = *c; // Разыменование поинтера значение равно 2

    int a3 = *b; // Разыменование поинтера, но переменная 'a' больше не существует так как мы уже вышли из stackMemory1()

    std::cout << a1 << std::endl; // Выводит a1
    std::cout << a2 << std::endl; // Выводит a2
    std::cout << a3 << std::endl; // Выводит неопределенное значение 2

    // Сравнение адресов поинтеров b и c
    std::cout << ((std::byte*) b - (std::byte*) c) << std::endl; /// Выводим разницу между поинтерами 0
    return 0;
}
